openapi: 3.0.1
info:
  title: "Atricore Console :: Remote : API"
  description: '# Atricore Console API'
  termsOfService: Terms
  contact:
    name: Sebastian Gonzalez O.
    url: https://www.atricore.com
    email: sgonzalez@atricore.com
  license:
    name: Atricore
    url: http://www.atricore.com
  version: 1.4.3-SNAPSHOT
servers:
- url: http://localhost:8081/atricore-res/services
  description: Endpoint URL
paths:
  /iam-authn/sign-on:
    post:
      operationId: signOn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OIDCSignOnRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCSignOnResponse'
  /iam-deploy/appliance:
    get:
      operationId: getAppliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetApplianceReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplianceRes'
    put:
      operationId: updateAppliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreApplianceReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreApplianceRes'
    post:
      operationId: createAppliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreApplianceReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreApplianceRes'
    delete:
      operationId: deleteAppliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRes'
  /iam-deploy/appliance/import:
    post:
      operationId: importAppliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportApplianceReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportApplianceRes'
  /iam-deploy/appliances:
    get:
      operationId: getAppliances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetApplianceReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppliancesRes'
  /iam-deploy/extsaml2sp:
    get:
      operationId: getExtSaml2Sp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetExtSaml2SpReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExtSaml2SpRes'
    put:
      operationId: udpateExtSaml2Sp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreExtSaml2SpReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreExtSaml2SpRes'
    post:
      operationId: createExtSaml2Sp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreExtSaml2SpReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreExtSaml2SpRes'
    delete:
      operationId: deleteExtSaml2Sp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRes'
  /iam-deploy/extsaml2sps:
    get:
      operationId: getExtSaml2Sps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetExtSaml2SpReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExtSaml2SpsRes'
  /iam-deploy/idp:
    get:
      operationId: getIdP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIdPReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIdPRes'
    put:
      operationId: updateIdP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreIdPReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreIdPRes'
    post:
      operationId: createIdP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreIdPReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreIdPRes'
    delete:
      operationId: deleteIdP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRes'
  /iam-deploy/idps:
    get:
      operationId: getIdPs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIdPReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIdPsRes'
  /iam-deploy/idsourceldap:
    get:
      operationId: getIdSourceLdap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIdSourceLdapReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIdSourceLdapRes'
    put:
      operationId: updateIdSourceLdap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreIdSourceLdapReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreIdSourceLdapRes'
    post:
      operationId: createIdSourceLdap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreIdSourceLdapReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreIdSourceLdapRes'
    delete:
      operationId: deleteIdSourceLdap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRes'
  /iam-deploy/idsourceldaps:
    get:
      operationId: getIdSourceLdaps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIdSourceLdapReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIdSourceLdapsRes'
  /iam-deploy/idvault:
    get:
      operationId: getIdVault
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIdVaultReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIdVaultRes'
    put:
      operationId: updateIdVault
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreIdVaultReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreIdVaultRes'
    post:
      operationId: createIdVault
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreIdVaultReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreIdVaultRes'
    delete:
      operationId: deleteIdVault
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRes'
  /iam-deploy/idvaults:
    get:
      operationId: getIdVaults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIdVaultReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIdVaultsRes'
  /iam-deploy/oidcrp:
    get:
      operationId: getOidcRp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOidcRpReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOidcRpRes'
    put:
      operationId: updateOidcRp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreOidcRpReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreOidcRpRes'
    post:
      operationId: createOidcRp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreOidcRpReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreOidcRpRes'
    delete:
      operationId: deleteOidcRp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRes'
  /iam-deploy/oidcrps:
    get:
      operationId: getOidcRps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOidcRpReq'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOidcRpsRes'
components:
  schemas:
    AccountLinkagePolicyDTO:
      type: object
      properties:
        customLinkEmitter:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        linkEmitterType:
          type: string
          enum:
          - EMAIL
          - UID
          - ONE_TO_ONE
          - CUSTOM
        name:
          type: string
    ActivationDTO:
      type: object
      properties:
        description:
          type: string
        elementId:
          type: string
        executionEnv:
          $ref: '#/components/schemas/ExecutionEnvironmentDTO'
        id:
          type: integer
          format: int64
        name:
          type: string
        resource:
          $ref: '#/components/schemas/ServiceResourceDTO'
        sp:
          $ref: '#/components/schemas/InternalSaml2ServiceProviderDTO'
        waypoints:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PointDTO'
    AttributeProfileDTO:
      type: object
      properties:
        elementId:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        profileType:
          type: string
          enum:
          - BASIC
          - JOSSO
          - ONE_TO_ONE
          - CUSTOM
    AttributeValueDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
    AuthenticationAssertionEmissionPolicyDTO:
      type: object
      properties:
        elementId:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
    AuthenticationContractDTO:
      type: object
      properties:
        elementId:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
    AuthenticationMechanismDTO:
      type: object
      properties:
        delegatedAuthentication:
          $ref: '#/components/schemas/DelegatedAuthenticationDTO'
        displayName:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        priority:
          type: integer
          format: int32
    AuthenticationServiceDTO:
      type: object
      properties:
        delegatedAuthentications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DelegatedAuthenticationDTO'
        description:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    CustomClassDTO:
      type: object
      properties:
        cardinality:
          type: string
        fqcn:
          type: string
        osgiFilter:
          type: string
        osgiService:
          type: boolean
        properties:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CustomClassPropertyDTO'
        timeoutSecs:
          type: integer
          format: int32
        type:
          type: string
    CustomClassPropertyDTO:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    DelegatedAuthenticationDTO:
      type: object
      properties:
        authnService:
          $ref: '#/components/schemas/AuthenticationServiceDTO'
        description:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        idp:
          $ref: '#/components/schemas/IdentityProviderDTO'
        name:
          type: string
        waypoints:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PointDTO'
    DeleteReq:
      type: object
      properties:
        idaName:
          type: string
        name:
          type: string
    DeleteRes:
      type: object
      properties:
        error:
          type: string
        removed:
          type: boolean
        validationErrors:
          type: array
          items:
            type: string
    EmbeddedIdentityVaultDTO:
      type: object
      properties:
        description:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        identityConnectorName:
          type: string
        name:
          type: string
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    EntitySelectionStrategyDTO:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    ExecutionEnvironmentDTO:
      type: object
      properties:
        activations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ActivationDTO'
        active:
          type: boolean
        bindingLocation:
          $ref: '#/components/schemas/LocationDTO'
        description:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        installDemoApps:
          type: boolean
        installUri:
          type: string
        location:
          type: string
        name:
          type: string
        overwriteOriginalSetup:
          type: boolean
        platformId:
          type: string
        targetJDK:
          type: string
        type:
          type: string
          enum:
          - LOCAL
          - REMOTE
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    ExtensionDTO:
      type: object
      properties:
        classifier:
          type: string
        id:
          type: string
        name:
          type: string
        namespace:
          type: string
        provider:
          type: string
        version:
          type: string
    ExternalOpenIDConnectRelayingPartyDTO:
      type: object
      properties:
        activeBindings:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - SAMLR2_HTTP_POST
            - SAMLR2_ARTIFACT
            - SAMLR2_HTTP_REDIRECT
            - SAMLR2_SOAP
            - SAMLR2_LOCAL
            - SSO_ARTIFACT
            - SSO_REDIRECT
            - SSO_POST
            - JOSSO_REDIRECT
            - JOSSO_SOAP
            - JOSSO_ARTIFACT
            - OAUTH2_SOAP
            - OAUTH2_HTTP_RESTFUL
        activeProfiles:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - SSO
            - SSO_ECP
            - SSO_SLO
            - SSO_NAMEID
            - ARTIFACT
            - ASSERTION_QUERY
            - NAMEID
            - ATTR_BASIC
            - ATTR_X500
            - ATTR_UUID
            - ATTR_DCE
            - ATTR_XACML
            - OAUTH2_USERNAMEPWD_FLOW
        authorizedURIs:
          uniqueItems: true
          type: array
          items:
            type: string
        clientAuthnMethod:
          type: string
          enum:
          - CLIENT_SECRET_BASIC
          - CLIENT_SECRET_POST
          - CLIENT_SECRET_JWT
          - PRIVATE_KEY_JWT
          - NONE
        clientCert:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        clientType:
          type: string
        config:
          $ref: '#/components/schemas/ProviderConfigDTO'
        description:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        encryptionAlg:
          type: string
        encryptionMethod:
          type: string
        federatedConnectionsA:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FederatedConnectionDTO'
        federatedConnectionsB:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FederatedConnectionDTO'
        grants:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - AUTHORIZATION_CODE
            - IMPLICIT
            - REFRESH_TOKEN
            - PASSWORD
            - CLIENT_CREDENTIALS
            - JWT_BEARER
            - JWT_BEARER_PWD
            - SAML2_BEARER
        id:
          type: integer
          format: int64
        idTokenEncryptionAlg:
          type: string
        idTokenEncryptionMethod:
          type: string
        idTokenSigningAlg:
          type: string
        identityAppliance:
          $ref: '#/components/schemas/IdentityApplianceDefinitionDTO'
        identityLookups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IdentityLookupDTO'
        isRemote:
          type: boolean
        location:
          $ref: '#/components/schemas/LocationDTO'
        metadata:
          $ref: '#/components/schemas/ResourceDTO'
        name:
          type: string
        postLogoutRedirectionURIs:
          uniqueItems: true
          type: array
          items:
            type: string
        remote:
          type: boolean
        responseTypes:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - CODE
            - TOKEN
            - ID_TOKEN
        role:
          type: string
          enum:
          - SSOIdentityProvider
          - SSOServiceProvider
          - AuthenticationAuthority
          - AttributeAuthority
          - PolicyDecisionPoint
          - Affiliation
          - Provisioning
          - Binding
        signingAlg:
          type: string
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    ExternalSaml2ServiceProviderDTO:
      type: object
      properties:
        activeBindings:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - SAMLR2_HTTP_POST
            - SAMLR2_ARTIFACT
            - SAMLR2_HTTP_REDIRECT
            - SAMLR2_SOAP
            - SAMLR2_LOCAL
            - SSO_ARTIFACT
            - SSO_REDIRECT
            - SSO_POST
            - JOSSO_REDIRECT
            - JOSSO_SOAP
            - JOSSO_ARTIFACT
            - OAUTH2_SOAP
            - OAUTH2_HTTP_RESTFUL
        activeProfiles:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - SSO
            - SSO_ECP
            - SSO_SLO
            - SSO_NAMEID
            - ARTIFACT
            - ASSERTION_QUERY
            - NAMEID
            - ATTR_BASIC
            - ATTR_X500
            - ATTR_UUID
            - ATTR_DCE
            - ATTR_XACML
            - OAUTH2_USERNAMEPWD_FLOW
        config:
          $ref: '#/components/schemas/ProviderConfigDTO'
        description:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        federatedConnectionsA:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FederatedConnectionDTO'
        federatedConnectionsB:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FederatedConnectionDTO'
        id:
          type: integer
          format: int64
        identityAppliance:
          $ref: '#/components/schemas/IdentityApplianceDefinitionDTO'
        identityLookups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IdentityLookupDTO'
        isRemote:
          type: boolean
        location:
          $ref: '#/components/schemas/LocationDTO'
        metadata:
          $ref: '#/components/schemas/ResourceDTO'
        name:
          type: string
        remote:
          type: boolean
        role:
          type: string
          enum:
          - SSOIdentityProvider
          - SSOServiceProvider
          - AuthenticationAuthority
          - AttributeAuthority
          - PolicyDecisionPoint
          - Affiliation
          - Provisioning
          - Binding
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    FederatedChannelDTO:
      type: object
      properties:
        activeBindings:
          type: array
          items:
            type: string
            enum:
            - SAMLR2_HTTP_POST
            - SAMLR2_ARTIFACT
            - SAMLR2_HTTP_REDIRECT
            - SAMLR2_SOAP
            - SAMLR2_LOCAL
            - SSO_ARTIFACT
            - SSO_REDIRECT
            - SSO_POST
            - JOSSO_REDIRECT
            - JOSSO_SOAP
            - JOSSO_ARTIFACT
            - OAUTH2_SOAP
            - OAUTH2_HTTP_RESTFUL
        activeProfiles:
          type: array
          items:
            type: string
            enum:
            - SSO
            - SSO_ECP
            - SSO_SLO
            - SSO_NAMEID
            - ARTIFACT
            - ASSERTION_QUERY
            - NAMEID
            - ATTR_BASIC
            - ATTR_X500
            - ATTR_UUID
            - ATTR_DCE
            - ATTR_XACML
            - OAUTH2_USERNAMEPWD_FLOW
        connectionA:
          $ref: '#/components/schemas/FederatedConnectionDTO'
        connectionB:
          $ref: '#/components/schemas/FederatedConnectionDTO'
        description:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        location:
          $ref: '#/components/schemas/LocationDTO'
        name:
          type: string
        overrideProviderSetup:
          type: boolean
    FederatedConnectionDTO:
      type: object
      properties:
        channelA:
          $ref: '#/components/schemas/FederatedChannelDTO'
        channelB:
          $ref: '#/components/schemas/FederatedChannelDTO'
        description:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        roleA:
          $ref: '#/components/schemas/FederatedProviderDTO'
        roleB:
          $ref: '#/components/schemas/FederatedProviderDTO'
        waypoints:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PointDTO'
    FederatedProviderDTO:
      type: object
      properties:
        activeBindings:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - SAMLR2_HTTP_POST
            - SAMLR2_ARTIFACT
            - SAMLR2_HTTP_REDIRECT
            - SAMLR2_SOAP
            - SAMLR2_LOCAL
            - SSO_ARTIFACT
            - SSO_REDIRECT
            - SSO_POST
            - JOSSO_REDIRECT
            - JOSSO_SOAP
            - JOSSO_ARTIFACT
            - OAUTH2_SOAP
            - OAUTH2_HTTP_RESTFUL
        activeProfiles:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - SSO
            - SSO_ECP
            - SSO_SLO
            - SSO_NAMEID
            - ARTIFACT
            - ASSERTION_QUERY
            - NAMEID
            - ATTR_BASIC
            - ATTR_X500
            - ATTR_UUID
            - ATTR_DCE
            - ATTR_XACML
            - OAUTH2_USERNAMEPWD_FLOW
        config:
          $ref: '#/components/schemas/ProviderConfigDTO'
        description:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        identityAppliance:
          $ref: '#/components/schemas/IdentityApplianceDefinitionDTO'
        isRemote:
          type: boolean
        location:
          $ref: '#/components/schemas/LocationDTO'
        metadata:
          $ref: '#/components/schemas/ResourceDTO'
        name:
          type: string
        remote:
          type: boolean
        role:
          type: string
          enum:
          - SSOIdentityProvider
          - SSOServiceProvider
          - AuthenticationAuthority
          - AttributeAuthority
          - PolicyDecisionPoint
          - Affiliation
          - Provisioning
          - Binding
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    GetApplianceReq:
      type: object
      properties:
        idOrName:
          type: string
        idaName:
          type: string
    GetApplianceRes:
      type: object
      properties:
        appliance:
          $ref: '#/components/schemas/IdentityApplianceDefinitionDTO'
        error:
          type: string
        validationErrors:
          type: array
          items:
            type: string
    GetAppliancesRes:
      type: object
      properties:
        appliances:
          type: array
          items:
            $ref: '#/components/schemas/IdentityApplianceDefinitionDTO'
        error:
          type: string
        validationErrors:
          type: array
          items:
            type: string
    GetExtSaml2SpReq:
      type: object
      properties:
        idaName:
          type: string
        name:
          type: string
    GetExtSaml2SpRes:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/SamlR2SPConfigDTO'
        error:
          type: string
        sp:
          $ref: '#/components/schemas/ExternalSaml2ServiceProviderDTO'
        validationErrors:
          type: array
          items:
            type: string
    GetExtSaml2SpsRes:
      type: object
      properties:
        error:
          type: string
        sps:
          type: array
          items:
            $ref: '#/components/schemas/ExternalSaml2ServiceProviderDTO'
        validationErrors:
          type: array
          items:
            type: string
    GetIdPReq:
      type: object
      properties:
        idaName:
          type: string
        name:
          type: string
    GetIdPRes:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/SamlR2IDPConfigDTO'
        error:
          type: string
        idp:
          $ref: '#/components/schemas/IdentityProviderDTO'
        validationErrors:
          type: array
          items:
            type: string
    GetIdPsRes:
      type: object
      properties:
        error:
          type: string
        idps:
          type: array
          items:
            $ref: '#/components/schemas/IdentityProviderDTO'
        validationErrors:
          type: array
          items:
            type: string
    GetIdSourceLdapReq:
      type: object
      properties:
        idaName:
          type: string
        name:
          type: string
    GetIdSourceLdapRes:
      type: object
      properties:
        error:
          type: string
        idSourceLdap:
          $ref: '#/components/schemas/LdapIdentitySourceDTO'
        validationErrors:
          type: array
          items:
            type: string
    GetIdSourceLdapsRes:
      type: object
      properties:
        error:
          type: string
        idSourceLdaps:
          type: array
          items:
            $ref: '#/components/schemas/LdapIdentitySourceDTO'
        validationErrors:
          type: array
          items:
            type: string
    GetIdVaultReq:
      type: object
      properties:
        idaName:
          type: string
        name:
          type: string
    GetIdVaultRes:
      type: object
      properties:
        error:
          type: string
        idVault:
          $ref: '#/components/schemas/EmbeddedIdentityVaultDTO'
        validationErrors:
          type: array
          items:
            type: string
    GetIdVaultsRes:
      type: object
      properties:
        error:
          type: string
        idVaults:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedIdentityVaultDTO'
        validationErrors:
          type: array
          items:
            type: string
    GetOidcRpReq:
      type: object
      properties:
        idaName:
          type: string
        name:
          type: string
    GetOidcRpRes:
      type: object
      properties:
        error:
          type: string
        oidcRp:
          $ref: '#/components/schemas/ExternalOpenIDConnectRelayingPartyDTO'
        validationErrors:
          type: array
          items:
            type: string
    GetOidcRpsRes:
      type: object
      properties:
        error:
          type: string
        oidcRps:
          type: array
          items:
            $ref: '#/components/schemas/ExternalOpenIDConnectRelayingPartyDTO'
        validationErrors:
          type: array
          items:
            type: string
    GroupDTO:
      type: object
      properties:
        description:
          type: string
        extraAttributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueDTO'
        id:
          type: string
        name:
          type: string
    IdentityApplianceDefinitionDTO:
      type: object
      properties:
        activeFeatures:
          type: array
          items:
            type: string
            enum:
            - SAMLR2
            - SPMLR2
            - JOSSO
            - STS
        authenticationServices:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationServiceDTO'
        description:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        executionEnvironments:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ExecutionEnvironmentDTO'
        id:
          type: integer
          format: int64
        identitySources:
          type: array
          items:
            $ref: '#/components/schemas/IdentitySourceDTO'
        idpSelector:
          $ref: '#/components/schemas/EntitySelectionStrategyDTO'
        keystore:
          $ref: '#/components/schemas/KeystoreDTO'
        lastModification:
          type: string
          format: date-time
        location:
          $ref: '#/components/schemas/LocationDTO'
        modelVersion:
          type: string
        name:
          type: string
        namespace:
          type: string
        providers:
          type: array
          items:
            $ref: '#/components/schemas/ProviderDTO'
        requiredBundles:
          uniqueItems: true
          type: array
          items:
            type: string
        revision:
          type: integer
          format: int32
        securityConfig:
          $ref: '#/components/schemas/IdentityApplianceSecurityConfigDTO'
        serviceResources:
          type: array
          items:
            $ref: '#/components/schemas/ServiceResourceDTO'
        supportedRoles:
          type: array
          items:
            type: string
            enum:
            - SSOIdentityProvider
            - SSOServiceProvider
            - AuthenticationAuthority
            - AttributeAuthority
            - PolicyDecisionPoint
            - Affiliation
            - Provisioning
            - Binding
        userDashboardBranding:
          $ref: '#/components/schemas/UserDashboardBrandingDTO'
    IdentityApplianceSecurityConfigDTO:
      type: object
      properties:
        encryptSensitiveData:
          type: boolean
        encryption:
          type: string
          enum:
          - DES_EDE_SHA1
          - DES_MD5
          - RC2_SHA1
          - AES128_CBC_SHA256
        encryptionConfig:
          type: string
          enum:
          - USER_PROVIDED
          - PROPERTIES_FILE
        encryptionConfigFile:
          type: string
        encryptionPassword:
          type: string
        externalConfig:
          type: boolean
        externalConfigFile:
          type: string
        passwordProperty:
          type: string
        salt:
          type: string
          enum:
          - NONE
          - FIXED
          - RANDOM
        saltProperty:
          type: string
        saltValue:
          type: string
    IdentityLookupDTO:
      type: object
      properties:
        description:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        identitySource:
          $ref: '#/components/schemas/IdentitySourceDTO'
        name:
          type: string
        provider:
          $ref: '#/components/schemas/ProviderDTO'
        waypoints:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PointDTO'
    IdentityMappingPolicyDTO:
      type: object
      properties:
        customMapper:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        mappingType:
          type: string
          enum:
          - LOCAL
          - REMOTE
          - MERGED
          - CUSTOM
        name:
          type: string
        useLocalId:
          type: boolean
    IdentityProviderDTO:
      type: object
      properties:
        activeBindings:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - SAMLR2_HTTP_POST
            - SAMLR2_ARTIFACT
            - SAMLR2_HTTP_REDIRECT
            - SAMLR2_SOAP
            - SAMLR2_LOCAL
            - SSO_ARTIFACT
            - SSO_REDIRECT
            - SSO_POST
            - JOSSO_REDIRECT
            - JOSSO_SOAP
            - JOSSO_ARTIFACT
            - OAUTH2_SOAP
            - OAUTH2_HTTP_RESTFUL
        activeProfiles:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - SSO
            - SSO_ECP
            - SSO_SLO
            - SSO_NAMEID
            - ARTIFACT
            - ASSERTION_QUERY
            - NAMEID
            - ATTR_BASIC
            - ATTR_X500
            - ATTR_UUID
            - ATTR_DCE
            - ATTR_XACML
            - OAUTH2_USERNAMEPWD_FLOW
        attributeProfile:
          $ref: '#/components/schemas/AttributeProfileDTO'
        authenticationContract:
          $ref: '#/components/schemas/AuthenticationContractDTO'
        authenticationMechanisms:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationMechanismDTO'
        config:
          $ref: '#/components/schemas/ProviderConfigDTO'
        dashboardUrl:
          type: string
        delegatedAuthentications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DelegatedAuthenticationDTO'
        description:
          type: string
        destroyPreviousSession:
          type: boolean
        displayName:
          type: string
        elementId:
          type: string
        emissionPolicy:
          $ref: '#/components/schemas/AuthenticationAssertionEmissionPolicyDTO'
        enableMetadataEndpoint:
          type: boolean
        encryptAssertion:
          type: boolean
        encryptAssertionAlgorithm:
          type: string
        errorBinding:
          type: string
          enum:
          - ARTIFACT
          - JSON
          - GET
        externallyHostedIdentityConfirmationTokenService:
          type: boolean
        federatedConnectionsA:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FederatedConnectionDTO'
        federatedConnectionsB:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FederatedConnectionDTO'
        id:
          type: integer
          format: int64
        identityAppliance:
          $ref: '#/components/schemas/IdentityApplianceDefinitionDTO'
        identityConfirmationEnabled:
          type: boolean
        identityConfirmationOAuth2AuthorizationServerEndpoint:
          type: string
        identityConfirmationOAuth2ClientId:
          type: string
        identityConfirmationOAuth2ClientSecret:
          type: string
        identityConfirmationPolicy:
          $ref: '#/components/schemas/ExtensionDTO'
        ignoreRequestedNameIDPolicy:
          type: boolean
        isRemote:
          type: boolean
        location:
          $ref: '#/components/schemas/LocationDTO'
        maxSessionsPerUser:
          type: integer
          format: int32
        messageTtl:
          type: integer
          format: int32
        messageTtlTolerance:
          type: integer
          format: int32
        metadata:
          $ref: '#/components/schemas/ResourceDTO'
        name:
          type: string
        oauth2Clients:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/OAuth2ClientDTO'
        oauth2ClientsConfig:
          type: string
        oauth2Enabled:
          type: boolean
        oauth2Key:
          type: string
        oauth2RememberMeTokenValidity:
          type: integer
          format: int64
        oauth2TokenValidity:
          type: integer
          format: int64
        oidcAccessTokenTimeToLive:
          type: integer
          format: int32
        oidcAuthzCodeTimeToLive:
          type: integer
          format: int32
        oidcIdTokenTimeToLive:
          type: integer
          format: int32
        openIdEnabled:
          type: boolean
        pwdlessAuthnEnabled:
          type: boolean
        pwdlessAuthnFrom:
          type: string
        pwdlessAuthnSubject:
          type: string
        pwdlessAuthnTemplate:
          type: string
        pwdlessAuthnTo:
          type: string
        remote:
          type: boolean
        role:
          type: string
          enum:
          - SSOIdentityProvider
          - SSOServiceProvider
          - AuthenticationAuthority
          - AttributeAuthority
          - PolicyDecisionPoint
          - Affiliation
          - Provisioning
          - Binding
        sessionManagerFactory:
          $ref: '#/components/schemas/SessionManagerFactoryDTO'
        signRequests:
          type: boolean
        signatureHash:
          type: string
        ssoSessionTimeout:
          type: integer
          format: int32
        subjectAuthnPolicies:
          type: array
          items:
            $ref: '#/components/schemas/SubjectAuthenticationPolicyDTO'
        subjectNameIDPolicy:
          $ref: '#/components/schemas/SubjectNameIdentifierPolicyDTO'
        userDashboardBranding:
          type: string
        wantAuthnRequestsSigned:
          type: boolean
        wantSignedRequests:
          type: boolean
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    IdentitySourceDTO:
      type: object
      properties:
        description:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    ImportApplianceReq:
      type: object
      properties:
        base64Json:
          type: string
        idaName:
          type: string
        modify:
          type: boolean
        newDescription:
          type: string
        newLocation:
          type: string
        newName:
          type: string
        newNamespace:
          type: string
    ImportApplianceRes:
      type: object
      properties:
        appliance:
          $ref: '#/components/schemas/IdentityApplianceDefinitionDTO'
        error:
          type: string
        validationErrors:
          type: array
          items:
            type: string
    InternalSaml2ServiceProviderDTO:
      type: object
      properties:
        accountLinkagePolicy:
          $ref: '#/components/schemas/AccountLinkagePolicyDTO'
        activeBindings:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - SAMLR2_HTTP_POST
            - SAMLR2_ARTIFACT
            - SAMLR2_HTTP_REDIRECT
            - SAMLR2_SOAP
            - SAMLR2_LOCAL
            - SSO_ARTIFACT
            - SSO_REDIRECT
            - SSO_POST
            - JOSSO_REDIRECT
            - JOSSO_SOAP
            - JOSSO_ARTIFACT
            - OAUTH2_SOAP
            - OAUTH2_HTTP_RESTFUL
        activeProfiles:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - SSO
            - SSO_ECP
            - SSO_SLO
            - SSO_NAMEID
            - ARTIFACT
            - ASSERTION_QUERY
            - NAMEID
            - ATTR_BASIC
            - ATTR_X500
            - ATTR_UUID
            - ATTR_DCE
            - ATTR_XACML
            - OAUTH2_USERNAMEPWD_FLOW
        authenticationContract:
          $ref: '#/components/schemas/AuthenticationContractDTO'
        authenticationMechanism:
          $ref: '#/components/schemas/AuthenticationMechanismDTO'
        config:
          $ref: '#/components/schemas/ProviderConfigDTO'
        dashboardUrl:
          type: string
        description:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        enableMetadataEndpoint:
          type: boolean
        errorBinding:
          type: string
          enum:
          - ARTIFACT
          - JSON
          - GET
        federatedConnectionsA:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FederatedConnectionDTO'
        federatedConnectionsB:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/FederatedConnectionDTO'
        id:
          type: integer
          format: int64
        identityAppliance:
          $ref: '#/components/schemas/IdentityApplianceDefinitionDTO'
        identityMappingPolicy:
          $ref: '#/components/schemas/IdentityMappingPolicyDTO'
        isRemote:
          type: boolean
        location:
          $ref: '#/components/schemas/LocationDTO'
        messageTtl:
          type: integer
          format: int32
        messageTtlTolerance:
          type: integer
          format: int32
        metadata:
          $ref: '#/components/schemas/ResourceDTO'
        name:
          type: string
        remote:
          type: boolean
        role:
          type: string
          enum:
          - SSOIdentityProvider
          - SSOServiceProvider
          - AuthenticationAuthority
          - AttributeAuthority
          - PolicyDecisionPoint
          - Affiliation
          - Provisioning
          - Binding
        serviceConnection:
          $ref: '#/components/schemas/ServiceConnectionDTO'
        signAuthenticationRequests:
          type: boolean
        signRequests:
          type: boolean
        signatureHash:
          type: string
        wantAssertionSigned:
          type: boolean
        wantSLOResponseSigned:
          type: boolean
        wantSignedRequests:
          type: boolean
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    KeystoreDTO:
      type: object
      properties:
        certificateAlias:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        keystorePassOnly:
          type: boolean
        name:
          type: string
        password:
          type: string
        privateKeyName:
          type: string
        privateKeyPassword:
          type: string
        store:
          $ref: '#/components/schemas/ResourceDTO'
        type:
          type: string
    LdapIdentitySourceDTO:
      type: object
      properties:
        credentialQueryString:
          type: string
        customClass:
          $ref: '#/components/schemas/CustomClassDTO'
        description:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        includeOperationalAttributes:
          type: boolean
        initialContextFactory:
          type: string
        ldapSearchScope:
          type: string
        name:
          type: string
        principalUidAttributeID:
          type: string
        providerUrl:
          type: string
        referrals:
          type: string
        roleAttributeID:
          type: string
        roleMatchingMode:
          type: string
        rolesCtxDN:
          type: string
        securityAuthentication:
          type: string
        securityCredential:
          type: string
        securityPrincipal:
          type: string
        uidAttributeID:
          type: string
        updatePasswordEnabled:
          type: boolean
        updateableCredentialAttribute:
          type: string
        userPropertiesQueryString:
          type: string
        usersCtxDN:
          type: string
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    LocationDTO:
      type: object
      properties:
        context:
          type: string
        elementId:
          type: string
        host:
          type: string
        id:
          type: integer
          format: int64
        locationAsString:
          type: string
        port:
          type: integer
          format: int32
        protocol:
          type: string
        uri:
          type: string
    OAuth2ClientDTO:
      type: object
      properties:
        baseURL:
          type: string
        id:
          type: string
        secret:
          type: string
    OIDCSignOnRequest:
      type: object
      properties:
        clientId:
          type: string
        password:
          type: string
        secret:
          type: string
        server:
          $ref: '#/components/schemas/ServerContext'
        username:
          type: string
    OIDCSignOnResponse:
      type: object
      properties:
        accessToken:
          type: string
        authenticatedUser:
          $ref: '#/components/schemas/UserDTO'
        idToken:
          type: string
        refreshToken:
          type: string
        server:
          $ref: '#/components/schemas/ServerContext'
        validationErrors:
          type: array
          items:
            type: string
    PointDTO:
      type: object
      properties:
        x:
          type: integer
          format: int64
        "y":
          type: integer
          format: int64
    ProviderConfigDTO:
      type: object
      properties:
        description:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
    ProviderDTO:
      type: object
      properties:
        activeBindings:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - SAMLR2_HTTP_POST
            - SAMLR2_ARTIFACT
            - SAMLR2_HTTP_REDIRECT
            - SAMLR2_SOAP
            - SAMLR2_LOCAL
            - SSO_ARTIFACT
            - SSO_REDIRECT
            - SSO_POST
            - JOSSO_REDIRECT
            - JOSSO_SOAP
            - JOSSO_ARTIFACT
            - OAUTH2_SOAP
            - OAUTH2_HTTP_RESTFUL
        activeProfiles:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - SSO
            - SSO_ECP
            - SSO_SLO
            - SSO_NAMEID
            - ARTIFACT
            - ASSERTION_QUERY
            - NAMEID
            - ATTR_BASIC
            - ATTR_X500
            - ATTR_UUID
            - ATTR_DCE
            - ATTR_XACML
            - OAUTH2_USERNAMEPWD_FLOW
        config:
          $ref: '#/components/schemas/ProviderConfigDTO'
        description:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        identityAppliance:
          $ref: '#/components/schemas/IdentityApplianceDefinitionDTO'
        isRemote:
          type: boolean
        location:
          $ref: '#/components/schemas/LocationDTO'
        metadata:
          $ref: '#/components/schemas/ResourceDTO'
        name:
          type: string
        remote:
          type: boolean
        role:
          type: string
          enum:
          - SSOIdentityProvider
          - SSOServiceProvider
          - AuthenticationAuthority
          - AttributeAuthority
          - PolicyDecisionPoint
          - Affiliation
          - Provisioning
          - Binding
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    ResourceDTO:
      type: object
      properties:
        displayName:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        uri:
          type: string
        value:
          type: array
          items:
            type: string
            format: byte
    SamlR2IDPConfigDTO:
      type: object
      properties:
        description:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        encrypter:
          $ref: '#/components/schemas/KeystoreDTO'
        id:
          type: integer
          format: int64
        name:
          type: string
        signer:
          $ref: '#/components/schemas/KeystoreDTO'
        useSampleStore:
          type: boolean
        useSystemStore:
          type: boolean
    SamlR2SPConfigDTO:
      type: object
      properties:
        description:
          type: string
        displayName:
          type: string
        elementId:
          type: string
        encrypter:
          $ref: '#/components/schemas/KeystoreDTO'
        id:
          type: integer
          format: int64
        name:
          type: string
        signer:
          $ref: '#/components/schemas/KeystoreDTO'
        useSampleStore:
          type: boolean
        useSystemStore:
          type: boolean
    ServerContext:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        serverId:
          type: string
    ServiceConnectionDTO:
      type: object
      properties:
        description:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        resource:
          $ref: '#/components/schemas/ServiceResourceDTO'
        sp:
          $ref: '#/components/schemas/InternalSaml2ServiceProviderDTO'
        waypoints:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PointDTO'
    ServiceResourceDTO:
      type: object
      properties:
        activation:
          $ref: '#/components/schemas/ActivationDTO'
        description:
          type: string
        elementId:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        serviceConnection:
          $ref: '#/components/schemas/ServiceConnectionDTO'
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    SessionManagerFactoryDTO:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    StoreApplianceReq:
      type: object
      properties:
        appliance:
          $ref: '#/components/schemas/IdentityApplianceDefinitionDTO'
        idaName:
          type: string
    StoreApplianceRes:
      type: object
      properties:
        appliance:
          $ref: '#/components/schemas/IdentityApplianceDefinitionDTO'
        error:
          type: string
        validationErrors:
          type: array
          items:
            type: string
    StoreExtSaml2SpReq:
      type: object
      properties:
        idaName:
          type: string
        sp:
          $ref: '#/components/schemas/ExternalSaml2ServiceProviderDTO'
    StoreExtSaml2SpRes:
      type: object
      properties:
        error:
          type: string
        sp:
          $ref: '#/components/schemas/ExternalSaml2ServiceProviderDTO'
        validationErrors:
          type: array
          items:
            type: string
    StoreIdPReq:
      type: object
      properties:
        idaName:
          type: string
        idp:
          $ref: '#/components/schemas/IdentityProviderDTO'
    StoreIdPRes:
      type: object
      properties:
        error:
          type: string
        idp:
          $ref: '#/components/schemas/IdentityProviderDTO'
        validationErrors:
          type: array
          items:
            type: string
    StoreIdSourceLdapReq:
      type: object
      properties:
        idSourceLdap:
          $ref: '#/components/schemas/LdapIdentitySourceDTO'
        idaName:
          type: string
    StoreIdSourceLdapRes:
      type: object
      properties:
        error:
          type: string
        idSourceLdap:
          $ref: '#/components/schemas/LdapIdentitySourceDTO'
        validationErrors:
          type: array
          items:
            type: string
    StoreIdVaultReq:
      type: object
      properties:
        idVault:
          $ref: '#/components/schemas/EmbeddedIdentityVaultDTO'
        idaName:
          type: string
    StoreIdVaultRes:
      type: object
      properties:
        error:
          type: string
        idVault:
          $ref: '#/components/schemas/EmbeddedIdentityVaultDTO'
        validationErrors:
          type: array
          items:
            type: string
    StoreOidcRpReq:
      type: object
      properties:
        idaName:
          type: string
        oidcRp:
          $ref: '#/components/schemas/ExternalOpenIDConnectRelayingPartyDTO'
    StoreOidcRpRes:
      type: object
      properties:
        error:
          type: string
        oidcRp:
          $ref: '#/components/schemas/ExternalOpenIDConnectRelayingPartyDTO'
        validationErrors:
          type: array
          items:
            type: string
    SubjectAuthenticationPolicyDTO:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
    SubjectNameIdentifierPolicyDTO:
      type: object
      properties:
        descriptionKey:
          type: string
        id:
          type: string
        name:
          type: string
        subjectAttribute:
          type: string
        type:
          type: string
          enum:
          - EMAIL
          - PRINCIPAL
          - ATTRIBUTE
          - CUSTOM
    UserDTO:
      type: object
      properties:
        accountDisabled:
          type: boolean
        accountExpirationDate:
          type: string
          format: date-time
        accountExpires:
          type: boolean
        allowUserToChangePassword:
          type: boolean
        automaticallyGeneratePassword:
          type: boolean
        businessCategory:
          type: string
        commonName:
          type: string
        countryName:
          type: string
        daysBeforeExpiration:
          type: integer
          format: int32
        daysBetweenChanges:
          type: integer
          format: int32
        distinguishedName:
          type: string
        email:
          type: string
        emailNewPasword:
          type: boolean
        extraAttributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValueDTO'
        facsimilTelephoneNumber:
          type: string
        firstName:
          type: string
        forcePeriodicPasswordChanges:
          type: boolean
        generationQualifier:
          type: string
        givenName:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupDTO'
        id:
          type: string
        initials:
          type: string
        language:
          type: string
        limitSimultaneousLogin:
          type: boolean
        localityName:
          type: string
        maximunLogins:
          type: integer
          format: int32
        notifyPasswordExpiration:
          type: boolean
        organizationName:
          type: string
        organizationUnitName:
          type: string
        passwordExpirationDate:
          type: string
          format: date-time
        personalTitle:
          type: string
        postOfficeBox:
          type: string
        postalAddress:
          type: string
        postalCode:
          type: string
        preventNewSession:
          type: boolean
        stateOrProvinceName:
          type: string
        streetAddress:
          type: string
        surename:
          type: string
        telephoneNumber:
          type: string
        terminatePreviousSession:
          type: boolean
        userCertificate:
          type: array
          items:
            type: string
            format: byte
        userName:
          type: string
        userPassword:
          type: string
    UserDashboardBrandingDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
