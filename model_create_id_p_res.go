/*
 * Atricore Console :: Remote : API
 *
 * # Atricore Console API
 *
 * API version: 1.4.3-SNAPSHOT
 * Contact: sgonzalez@atricore.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// CreateIdPRes struct for CreateIdPRes
type CreateIdPRes struct {
	Error *string `json:"error,omitempty"`
	Idp *IdentityProviderDTO `json:"idp,omitempty"`
	ValidationErrors *[]string `json:"validationErrors,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateIdPRes CreateIdPRes

// NewCreateIdPRes instantiates a new CreateIdPRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIdPRes() *CreateIdPRes {
	this := CreateIdPRes{}
	return &this
}

// NewCreateIdPResWithDefaults instantiates a new CreateIdPRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIdPResWithDefaults() *CreateIdPRes {
	this := CreateIdPRes{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *CreateIdPRes) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIdPRes) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *CreateIdPRes) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *CreateIdPRes) SetError(v string) {
	o.Error = &v
}

// GetIdp returns the Idp field value if set, zero value otherwise.
func (o *CreateIdPRes) GetIdp() IdentityProviderDTO {
	if o == nil || o.Idp == nil {
		var ret IdentityProviderDTO
		return ret
	}
	return *o.Idp
}

// GetIdpOk returns a tuple with the Idp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIdPRes) GetIdpOk() (*IdentityProviderDTO, bool) {
	if o == nil || o.Idp == nil {
		return nil, false
	}
	return o.Idp, true
}

// HasIdp returns a boolean if a field has been set.
func (o *CreateIdPRes) HasIdp() bool {
	if o != nil && o.Idp != nil {
		return true
	}

	return false
}

// SetIdp gets a reference to the given IdentityProviderDTO and assigns it to the Idp field.
func (o *CreateIdPRes) SetIdp(v IdentityProviderDTO) {
	o.Idp = &v
}

// GetValidationErrors returns the ValidationErrors field value if set, zero value otherwise.
func (o *CreateIdPRes) GetValidationErrors() []string {
	if o == nil || o.ValidationErrors == nil {
		var ret []string
		return ret
	}
	return *o.ValidationErrors
}

// GetValidationErrorsOk returns a tuple with the ValidationErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIdPRes) GetValidationErrorsOk() (*[]string, bool) {
	if o == nil || o.ValidationErrors == nil {
		return nil, false
	}
	return o.ValidationErrors, true
}

// HasValidationErrors returns a boolean if a field has been set.
func (o *CreateIdPRes) HasValidationErrors() bool {
	if o != nil && o.ValidationErrors != nil {
		return true
	}

	return false
}

// SetValidationErrors gets a reference to the given []string and assigns it to the ValidationErrors field.
func (o *CreateIdPRes) SetValidationErrors(v []string) {
	o.ValidationErrors = &v
}

func (o CreateIdPRes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Idp != nil {
		toSerialize["idp"] = o.Idp
	}
	if o.ValidationErrors != nil {
		toSerialize["validationErrors"] = o.ValidationErrors
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CreateIdPRes) UnmarshalJSON(bytes []byte) (err error) {
	varCreateIdPRes := _CreateIdPRes{}

	if err = json.Unmarshal(bytes, &varCreateIdPRes); err == nil {
		*o = CreateIdPRes(varCreateIdPRes)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "error")
		delete(additionalProperties, "idp")
		delete(additionalProperties, "validationErrors")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateIdPRes struct {
	value *CreateIdPRes
	isSet bool
}

func (v NullableCreateIdPRes) Get() *CreateIdPRes {
	return v.value
}

func (v *NullableCreateIdPRes) Set(val *CreateIdPRes) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIdPRes) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIdPRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIdPRes(val *CreateIdPRes) *NullableCreateIdPRes {
	return &NullableCreateIdPRes{value: val, isSet: true}
}

func (v NullableCreateIdPRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIdPRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


