/*
Atricore Console :: Remote : API

# Atricore Console API

API version: 1.4.3-SNAPSHOT
Contact: sgonzalez@atricore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package jossoappi

import (
	"encoding/json"
)

// ProviderContainerDTO struct for ProviderContainerDTO
type ProviderContainerDTO struct {
	ExtOidcRp *ExternalOpenIDConnectRelayingPartyDTO `json:"extOidcRp,omitempty"`
	ExtSaml2sp *ExternalSaml2ServiceProviderDTO `json:"extSaml2sp,omitempty"`
	Idp *IdentityProviderDTO `json:"idp,omitempty"`
	Saml2sp *InternalSaml2ServiceProviderDTO `json:"saml2sp,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProviderContainerDTO ProviderContainerDTO

// NewProviderContainerDTO instantiates a new ProviderContainerDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProviderContainerDTO() *ProviderContainerDTO {
	this := ProviderContainerDTO{}
	return &this
}

// NewProviderContainerDTOWithDefaults instantiates a new ProviderContainerDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProviderContainerDTOWithDefaults() *ProviderContainerDTO {
	this := ProviderContainerDTO{}
	return &this
}

// GetExtOidcRp returns the ExtOidcRp field value if set, zero value otherwise.
func (o *ProviderContainerDTO) GetExtOidcRp() ExternalOpenIDConnectRelayingPartyDTO {
	if o == nil || o.ExtOidcRp == nil {
		var ret ExternalOpenIDConnectRelayingPartyDTO
		return ret
	}
	return *o.ExtOidcRp
}

// GetExtOidcRpOk returns a tuple with the ExtOidcRp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderContainerDTO) GetExtOidcRpOk() (*ExternalOpenIDConnectRelayingPartyDTO, bool) {
	if o == nil || o.ExtOidcRp == nil {
		return nil, false
	}
	return o.ExtOidcRp, true
}

// HasExtOidcRp returns a boolean if a field has been set.
func (o *ProviderContainerDTO) HasExtOidcRp() bool {
	if o != nil && o.ExtOidcRp != nil {
		return true
	}

	return false
}

// SetExtOidcRp gets a reference to the given ExternalOpenIDConnectRelayingPartyDTO and assigns it to the ExtOidcRp field.
func (o *ProviderContainerDTO) SetExtOidcRp(v ExternalOpenIDConnectRelayingPartyDTO) {
	o.ExtOidcRp = &v
}

// GetExtSaml2sp returns the ExtSaml2sp field value if set, zero value otherwise.
func (o *ProviderContainerDTO) GetExtSaml2sp() ExternalSaml2ServiceProviderDTO {
	if o == nil || o.ExtSaml2sp == nil {
		var ret ExternalSaml2ServiceProviderDTO
		return ret
	}
	return *o.ExtSaml2sp
}

// GetExtSaml2spOk returns a tuple with the ExtSaml2sp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderContainerDTO) GetExtSaml2spOk() (*ExternalSaml2ServiceProviderDTO, bool) {
	if o == nil || o.ExtSaml2sp == nil {
		return nil, false
	}
	return o.ExtSaml2sp, true
}

// HasExtSaml2sp returns a boolean if a field has been set.
func (o *ProviderContainerDTO) HasExtSaml2sp() bool {
	if o != nil && o.ExtSaml2sp != nil {
		return true
	}

	return false
}

// SetExtSaml2sp gets a reference to the given ExternalSaml2ServiceProviderDTO and assigns it to the ExtSaml2sp field.
func (o *ProviderContainerDTO) SetExtSaml2sp(v ExternalSaml2ServiceProviderDTO) {
	o.ExtSaml2sp = &v
}

// GetIdp returns the Idp field value if set, zero value otherwise.
func (o *ProviderContainerDTO) GetIdp() IdentityProviderDTO {
	if o == nil || o.Idp == nil {
		var ret IdentityProviderDTO
		return ret
	}
	return *o.Idp
}

// GetIdpOk returns a tuple with the Idp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderContainerDTO) GetIdpOk() (*IdentityProviderDTO, bool) {
	if o == nil || o.Idp == nil {
		return nil, false
	}
	return o.Idp, true
}

// HasIdp returns a boolean if a field has been set.
func (o *ProviderContainerDTO) HasIdp() bool {
	if o != nil && o.Idp != nil {
		return true
	}

	return false
}

// SetIdp gets a reference to the given IdentityProviderDTO and assigns it to the Idp field.
func (o *ProviderContainerDTO) SetIdp(v IdentityProviderDTO) {
	o.Idp = &v
}

// GetSaml2sp returns the Saml2sp field value if set, zero value otherwise.
func (o *ProviderContainerDTO) GetSaml2sp() InternalSaml2ServiceProviderDTO {
	if o == nil || o.Saml2sp == nil {
		var ret InternalSaml2ServiceProviderDTO
		return ret
	}
	return *o.Saml2sp
}

// GetSaml2spOk returns a tuple with the Saml2sp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProviderContainerDTO) GetSaml2spOk() (*InternalSaml2ServiceProviderDTO, bool) {
	if o == nil || o.Saml2sp == nil {
		return nil, false
	}
	return o.Saml2sp, true
}

// HasSaml2sp returns a boolean if a field has been set.
func (o *ProviderContainerDTO) HasSaml2sp() bool {
	if o != nil && o.Saml2sp != nil {
		return true
	}

	return false
}

// SetSaml2sp gets a reference to the given InternalSaml2ServiceProviderDTO and assigns it to the Saml2sp field.
func (o *ProviderContainerDTO) SetSaml2sp(v InternalSaml2ServiceProviderDTO) {
	o.Saml2sp = &v
}

func (o ProviderContainerDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExtOidcRp != nil {
		toSerialize["extOidcRp"] = o.ExtOidcRp
	}
	if o.ExtSaml2sp != nil {
		toSerialize["extSaml2sp"] = o.ExtSaml2sp
	}
	if o.Idp != nil {
		toSerialize["idp"] = o.Idp
	}
	if o.Saml2sp != nil {
		toSerialize["saml2sp"] = o.Saml2sp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProviderContainerDTO) UnmarshalJSON(bytes []byte) (err error) {
	varProviderContainerDTO := _ProviderContainerDTO{}

	if err = json.Unmarshal(bytes, &varProviderContainerDTO); err == nil {
		*o = ProviderContainerDTO(varProviderContainerDTO)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "extOidcRp")
		delete(additionalProperties, "extSaml2sp")
		delete(additionalProperties, "idp")
		delete(additionalProperties, "saml2sp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProviderContainerDTO struct {
	value *ProviderContainerDTO
	isSet bool
}

func (v NullableProviderContainerDTO) Get() *ProviderContainerDTO {
	return v.value
}

func (v *NullableProviderContainerDTO) Set(val *ProviderContainerDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableProviderContainerDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableProviderContainerDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProviderContainerDTO(val *ProviderContainerDTO) *NullableProviderContainerDTO {
	return &NullableProviderContainerDTO{value: val, isSet: true}
}

func (v NullableProviderContainerDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProviderContainerDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


